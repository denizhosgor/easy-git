#!/bin/bash
# Файл русского языка

# --- Тексты меню ---
MENU_TITLE="Меню действий Git"
MENU_SECTION_WORKFLOW="Ежедневный рабочий процесс"
MENU_ITEM_1="Инициализировать проект (init-repo)"
MENU_ITEM_2="Начать новую функциональность (Feature)"
MENU_ITEM_3="Завершить функциональность"
MENU_ITEM_4="Начать новый релиз (Release)"
MENU_ITEM_5="Завершить релиз"
MENU_ITEM_6="Начать новый хотфикс (Hotfix)"
MENU_ITEM_7="Завершить хотфикс"
MENU_SECTION_SETUP="Настройка проекта"
MENU_ITEM_EXIT="Выход"
MENU_PROMPT="Пожалуйста, выберите опцию"

# --- Тексты для ввода ---
PROMPT_FEATURE_NAME="Введите название функциональности"
PROMPT_FINISH_FEATURE_NAME="Введите название функциональности для завершения"
PROMPT_RELEASE_VERSION="Введите номер версии релиза (например: v1.3.0)"
PROMPT_FINISH_RELEASE_VERSION="Введите версию релиза для завершения"
PROMPT_HOTFIX_NAME="Введите название хотфикса"
PROMPT_FINISH_HOTFIX_NAME="Введите название хотфикса для завершения"
PROMPT_NEW_VERSION="Введите новый номер версии (например: v1.3.1)"
PROMPT_CONFIRM_INIT="Эта операция создаст ветку 'develop'. Это делается только один раз в начале проекта. Вы уверены? (д/Н)"
PROMPT_CONTINUE="Нажмите Enter, чтобы продолжить..."

# --- Сообщения об ошибках и статусе ---
MSG_ERROR_PREFIX="Ошибка:"
MSG_INVALID_CHOICE="Неверный выбор!"
MSG_CANNOT_BE_EMPTY="не может быть пустым."
MSG_OPERATION_CANCELLED="Операция отменена."
MSG_EXITING="Выход..."

# --- Сообщения для конкретных скриптов ---
INIT_HELP_DESC="Этот скрипт запускается один раз в самом начале проекта для настройки структуры Git-Flow. Он создает новую ветку 'develop' из ветки 'main' и отправляет обе на удаленный сервер."
INIT_HELP_USAGE="Использование"
INIT_CREATING_DEVELOP=">> Создание ветки 'develop'..."
INIT_PUSHING_BRANCHES=">> Отправка веток 'main' и 'develop' на удаленный сервер (origin)..."
INIT_SETUP_COMPLETE=">> Настройка завершена!"
INIT_REMINDER_PROTECT_BRANCHES="Не забудьте установить 'main' и 'develop' как 'Защищенные ветки' (Protected Branches) в интерфейсе GitLab."

# --- Сообщения скрипта start-feature.sh ---
SF_HELP_TITLE="start-feature.sh - Создает новую ветку для разработки функциональности."
SF_HELP_DESC_LINE_1="Этот скрипт автоматизирует процесс начала работы над новой функциональностью в соответствии со стратегией Git-Flow. Он выполняет следующие шаги:"
SF_HELP_STEP_1="1. Переключается на ветку 'develop'."
SF_HELP_STEP_2="2. Получает последние изменения из удаленной ветки 'develop'."
SF_HELP_STEP_3="3. Создает и переключается на новую ветку в формате 'feature/<имя-функциональности>'."
SF_HELP_STEP_4="4. Отправляет новую ветку на удаленный сервер и устанавливает отслеживание (-u)."
SF_HELP_EXAMPLE_TITLE="ПРИМЕР:"
SF_HELP_EXAMPLE_DESC="# Создает новую ветку для функциональности 'профиль-пользователя'."
SF_ERROR_NO_NAME="Название функциональности не указано."
SF_INFO_SEE_HELP="Для информации об использовании, запустите: $0 --help"
SF_INFO_SWITCHING_TO_DEV=">> Переключение на 'develop' и обновление..."
SF_INFO_CREATING_BRANCH=">> Создание новой ветки для функциональности:"
SF_INFO_PUSHING_BRANCH=">> Отправка новой ветки на удаленный сервер..."
SF_INFO_READY="Ветка готова к работе!"

# --- Сообщения скрипта finish-feature.sh ---
FF_HELP_TITLE="finish-feature.sh - Завершает работу над веткой функциональности."
FF_HELP_DESC_LINE_1="Этот скрипт автоматизирует шаги по слиянию завершенной ветки функциональности в 'develop' и ее последующей очистке:"
FF_HELP_STEP_1="1. Переключается на ветку 'develop' и получает последние изменения."
FF_HELP_STEP_2="2. Выполняет слияние ветки 'feature/<имя-функциональности>' в 'develop' (--no-ff)."
FF_HELP_STEP_3="3. Отправляет обновленную ветку 'develop' на удаленный сервер."
FF_HELP_STEP_4="4. Удаляет ветку функциональности как из локального, так и из удаленного репозитория."
FF_HELP_IMPORTANT_NOTE_TITLE="ВАЖНОЕ ПРИМЕЧАНИЕ:"
FF_HELP_IMPORTANT_NOTE_DESC="Этот скрипт выполняет слияние веток напрямую. Для командной работы более безопасным и рекомендуемым методом является создание Merge Request (MR) через GitLab."
FF_HELP_EXAMPLE_DESC="# Завершает работу над веткой функциональности 'профиль-пользователя'."
FF_ERROR_NO_NAME="Название функциональности не указано."
FF_INFO_MERGING="ветки в 'develop'..."
FF_INFO_PUSHING_DEV=">> Отправка ветки 'develop' на удаленный сервер..."
FF_INFO_DELETING_BRANCH=">> Удаление ветки функциональности из локального и удаленного репозиториев..."
FF_INFO_SUCCESS=">> Операция завершена!"
FF_INFO_SUCCESS_DETAILS="была успешно слита в 'develop'."

# --- Сообщения скрипта start-release.sh ---
SR_HELP_TITLE="start-release.sh - Начинает новый процесс релиза."
SR_HELP_DESC_LINE_1="Этот скрипт автоматизирует создание новой релизной ветки из текущего стабильного состояния 'develop'. Эта ветка используется для финального тестирования, мелких исправлений и подготовки к выпуску."
SR_HELP_DESC_LINE_2="Скрипт выполняет следующие шаги:"
SR_HELP_STEP_1="1. Переключается на ветку 'develop' и получает последние изменения."
SR_HELP_STEP_2="2. Создает и переключается на новую ветку в формате 'release/<номер-версии>'."
SR_HELP_STEP_3="3. Отправляет новую ветку на удаленный сервер и устанавливает отслеживание (-u)."
SR_HELP_EXAMPLE_DESC="# Создает новую релизную ветку с названием 'v1.2.6'."
SR_ERROR_NO_VERSION="Номер версии не указан."
SR_INFO_USAGE="Использование: $0 <номер-версии> (например: v1.2.6)"
SR_INFO_MORE_INFO="Для дополнительной информации, запустите: $0 --help"
SR_INFO_CREATING_BRANCH=">> Создание новой релизной ветки:"
SR_INFO_READY="Ветка готова к финальному тестированию и подготовке!"

# --- Сообщения скрипта finish-release.sh ---
FR_HELP_TITLE="finish-release.sh - Завершает и публикует релиз."
FR_HELP_DESC_LINE_1="Этот скрипт сливает протестированную ветку релиза в постоянные ветки 'main' и 'develop', ставит тег новой версии и удаляет временную ветку релиза."
FR_HELP_DESC_LINE_2="Скрипт выполняет следующие шаги по порядку:"
FR_HELP_STEP_1="1. Переключается на 'main' и сливает в нее ветку 'release/<версия>'."
FR_HELP_STEP_2="2. Ставит тег с номером версии на этот новый коммит слияния в 'main'."
FR_HELP_STEP_3="3. Переключается на 'develop' и также сливает в нее ветку 'release/<версия>'. (Это гарантирует, что исправления, сделанные в последний момент в релизе, также попадут в 'develop')."
FR_HELP_STEP_4="4. Отправляет обновленные ветки 'main' и 'develop', а также новый тег на удаленный сервер (origin)."
FR_HELP_STEP_5="5. Удаляет завершенную ветку релиза из локального и удаленного репозиториев. ('develop' и 'main' НИКОГДА не удаляются)."
FR_HELP_EXAMPLE_DESC="# Завершает и публикует релиз 'v1.2.6'."
FR_INFO_SWITCHING_TO_MAIN=">> Переключение на 'main' и обновление..."
FR_INFO_MERGING_TO_MAIN="ветки в 'main'..."
FR_INFO_TAGGING=">> Установка тега версии:"
FR_INFO_MERGING_TO_DEV="ветки в 'develop'..."
FR_INFO_PUSHING_ALL=">> Отправка 'main', 'develop' и тегов на удаленный сервер..."
FR_INFO_DELETING_BRANCH=">> Удаление релизной ветки из локального и удаленного репозиториев..."
FR_INFO_SUCCESS_PREFIX=">> Релиз"
FR_INFO_SUCCESS_SUFFIX="успешно завершен!"

# --- Сообщения скрипта start-hotfix.sh ---
SH_HELP_TITLE="start-hotfix.sh - Начинает процесс экстренного исправления (хотфикс)."
SH_HELP_DESC_LINE_1="Этот скрипт автоматизирует создание новой ветки для исправления срочной ошибки, найденной в рабочем коде (т.е. в ветке 'main')."
SH_HELP_DESC_LINE_2="Ветки 'Hotfix' создаются непосредственно из 'main', независимо от новых функциональностей в ветке 'develop'."
SH_HELP_DESC_LINE_3="Скрипт выполняет следующие шаги:"
SH_HELP_STEP_1="1. Переключается на ветку 'main' и получает последние изменения."
SH_HELP_STEP_2="2. Создает и переключается на новую ветку в формате 'hotfix/<название-хотфикса>'."
SH_HELP_EXAMPLE_DESC="# Создает новую ветку хотфикса с названием 'срочное-исправление-логина'."
SH_ERROR_NO_NAME="Название хотфикса не указано."
SH_INFO_USAGE="Использование: $0 <название-хотфикса>"
SH_INFO_CREATING_BRANCH=">> Создание новой ветки хотфикса:"
SH_INFO_READY="готова к работе!"

# --- Сообщения скрипта finish-hotfix.sh ---
FH_HELP_TITLE="finish-hotfix.sh - Завершает процесс экстренного исправления (хотфикс)."
FH_HELP_DESC_LINE_1="Этот скрипт сливает ветку 'hotfix', содержащую срочное исправление, в постоянные ветки 'main' и 'develop', присваивает новый тег версии и удаляет ветку 'hotfix'."
FH_HELP_STEP_1="1. Переключается на 'main' и сливает в нее ветку 'hotfix/<название>'."
FH_HELP_STEP_2="2. Ставит тег с <новым-номером-версии> на это слияние в 'main'."
FH_HELP_STEP_3="3. Переключается на 'develop' и также сливает в нее ветку 'hotfix/<название>'. (Это гарантирует, что исправление будет включено в будущую разработку)."
FH_HELP_STEP_4="4. Отправляет обновленные ветки 'main' и 'develop', а также новый тег на удаленный сервер."
FH_HELP_STEP_5="5. Удаляет завершенную ветку 'hotfix' из локального репозитория."
FH_HELP_ARGS_TITLE="ТРЕБУЕМЫЕ АРГУМЕНТЫ:"
FH_HELP_ARG_1="<название-хотфикса>     : Название ветки, созданной с помощью 'start-hotfix.sh'."
FH_HELP_ARG_2="<новый-номер-версии>    : Новый номер версии, который будет выпущен с этим исправлением (например: v1.2.8)."
FH_HELP_EXAMPLE_DESC="# Завершает 'срочное-исправление-логина' и выпускает его как v1.2.8."
FH_ERROR_MISSING_ARGS="Отсутствуют аргументы."
FH_INFO_USAGE="Использование: $0 <название-хотфикса> <новый-номер-версии>"
FH_INFO_SWITCHING_TO_MAIN=">> Переключение на 'main'..."
FH_INFO_SWITCHING_TO_DEV=">> Переключение на 'develop'..."
FH_INFO_TAGGING=">> Установка тега новой версии:"
FH_INFO_DELETING_BRANCH=">> Удаление ветки хотфикса из локального репозитория..."
FH_INFO_SUCCESS_PREFIX=">> Хотфикс"
FH_INFO_SUCCESS_SUFFIX="успешно завершен!"