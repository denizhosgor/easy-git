#!/bin/bash
# Deutsche Sprachdatei

# --- Menütexte ---
MENU_TITLE="Git-Aktionsmenü"
MENU_SECTION_WORKFLOW="Täglicher Arbeitsablauf"
MENU_ITEM_1="Projekt initialisieren (init-repo)"
MENU_ITEM_2="Neues Feature starten"
MENU_ITEM_3="Feature abschließen"
MENU_ITEM_4="Neues Release starten"
MENU_ITEM_5="Release abschließen"
MENU_ITEM_6="Neuen Hotfix starten"
MENU_ITEM_7="Hotfix abschließen"
MENU_SECTION_SETUP="Projekteinrichtung"
MENU_ITEM_EXIT="Beenden"
MENU_PROMPT="Bitte eine Option auswählen"

# --- Eingabeaufforderungen ---
PROMPT_FEATURE_NAME="Feature-Namen eingeben"
PROMPT_FINISH_FEATURE_NAME="Namen des abzuschließenden Features eingeben"
PROMPT_RELEASE_VERSION="Release-Versionsnummer eingeben (z.B. v1.3.0)"
PROMPT_FINISH_RELEASE_VERSION="Abzuschließende Release-Version eingeben"
PROMPT_HOTFIX_NAME="Hotfix-Namen eingeben"
PROMPT_FINISH_HOTFIX_NAME="Namen des abzuschließenden Hotfixes eingeben"
PROMPT_NEW_VERSION="Neue Versionsnummer eingeben (z.B. v1.3.1)"
PROMPT_CONFIRM_INIT="Dieser Vorgang erstellt den 'develop'-Branch. Dies wird nur einmal zu Beginn des Projekts durchgeführt. Sind Sie sicher? (j/J)"
PROMPT_CONTINUE="Eingabetaste drücken, um fortzufahren..."

# --- Fehler- und Statusmeldungen ---
MSG_ERROR_PREFIX="Fehler:"
MSG_INVALID_CHOICE="Ungültige Auswahl!"
MSG_CANNOT_BE_EMPTY="darf nicht leer sein."
MSG_OPERATION_CANCELLED="Vorgang abgebrochen."
MSG_EXITING="Wird beendet..."

# --- Skript-spezifische Meldungen ---
INIT_HELP_DESC="Dieses Skript wird einmal zu Beginn eines Projekts ausgeführt, um die Git-Flow-Struktur einzurichten. Es erstellt einen neuen Branch namens 'develop' aus dem 'main'-Branch und pusht beide zum Remote-Server."
INIT_HELP_USAGE="Benutzung"
INIT_CREATING_DEVELOP=">> 'develop'-Branch wird erstellt..."
INIT_PUSHING_BRANCHES=">> 'main'- und 'develop'-Branches werden zum Remote (origin) gepusht..."
INIT_SETUP_COMPLETE=">> Einrichtung abgeschlossen!"
INIT_REMINDER_PROTECT_BRANCHES="Vergessen Sie nicht, 'main' und 'develop' in der GitLab-Oberfläche als 'Geschützte Branches' (Protected Branches) festzulegen."

# --- start-feature.sh Skript-Meldungen ---
SF_HELP_TITLE="start-feature.sh - Erstellt einen neuen Feature-Entwicklungsbranch."
SF_HELP_DESC_LINE_1="Dieses Skript automatisiert den Prozess zum Starten eines neuen Features gemäß der Git-Flow-Strategie. Es führt die folgenden Schritte aus:"
SF_HELP_STEP_1="1. Wechselt zum 'develop'-Branch."
SF_HELP_STEP_2="2. Holt die neuesten Änderungen aus dem entfernten 'develop'-Branch."
SF_HELP_STEP_3="3. Erstellt einen neuen Branch im Format 'feature/<feature-name>' und wechselt zu ihm."
SF_HELP_STEP_4="4. Pusht den neuen Branch zum Remote und stellt die Nachverfolgung ein (-u)."
SF_HELP_EXAMPLE_TITLE="BEISPIEL:"
SF_HELP_EXAMPLE_DESC="# Erstellt einen neuen Feature-Branch namens 'benutzerprofil'."
SF_ERROR_NO_NAME="Feature-Name wurde nicht angegeben."
SF_INFO_SEE_HELP="Für die Benutzung, führen Sie aus: $0 --help"
SF_INFO_SWITCHING_TO_DEV=">> Wechsle zu 'develop' und aktualisiere..."
SF_INFO_CREATING_BRANCH=">> Erstelle neuen Feature-Branch:"
SF_INFO_PUSHING_BRANCH=">> Pushe neuen Branch zum Remote..."
SF_INFO_READY="-Branch ist bereit für die Bearbeitung!"

# --- finish-feature.sh Skript-Meldungen ---
FF_HELP_TITLE="finish-feature.sh - Schließt einen Feature-Entwicklungsbranch ab."
FF_HELP_DESC_LINE_1="Dieses Skript automatisiert die Schritte, um einen abgeschlossenen Feature-Branch in 'develop' zu mergen und den Feature-Branch zu bereinigen:"
FF_HELP_STEP_1="1. Wechselt zum 'develop'-Branch und holt die neuesten Änderungen."
FF_HELP_STEP_2="2. Merged den 'feature/<feature-name>'-Branch in 'develop' (--no-ff)."
FF_HELP_STEP_3="3. Pusht den aktualisierten 'develop'-Branch zum Remote."
FF_HELP_STEP_4="4. Löscht den Feature-Branch sowohl lokal als auch auf dem Remote-Repository."
FF_HELP_IMPORTANT_NOTE_TITLE="WICHTIGER HINWEIS:"
FF_HELP_IMPORTANT_NOTE_DESC="Dieses Skript mergt Branches direkt. Für die Teamarbeit ist das Erstellen eines Merge Requests (MR) über GitLab die sicherere und empfohlene Methode."
FF_HELP_EXAMPLE_DESC="# Schließt den Feature-Branch namens 'benutzerprofil' ab."
FF_ERROR_NO_NAME="Feature-Name wurde nicht angegeben."
FF_INFO_MERGING="-Branch in 'develop'..."
FF_INFO_PUSHING_DEV=">> Pushe 'develop'-Branch zum Remote..."
FF_INFO_DELETING_BRANCH=">> Lösche Feature-Branch lokal und vom Remote..."
FF_INFO_SUCCESS=">> Vorgang abgeschlossen!"
FF_INFO_SUCCESS_DETAILS="wurde erfolgreich in 'develop' gemerged."

# --- start-release.sh Skript-Meldungen ---
SR_HELP_TITLE="start-release.sh - Startet einen neuen Release-Prozess."
SR_HELP_DESC_LINE_1="Dieses Skript automatisiert die Erstellung eines neuen Release-Branches aus dem aktuellen stabilen Zustand von 'develop'. Dieser Branch wird für letzte Tests, kleinere Fehlerbehebungen und Versionsvorbereitungen vor der Veröffentlichung verwendet."
SR_HELP_DESC_LINE_2="Das Skript führt die folgenden Schritte aus:"
SR_HELP_STEP_1="1. Wechselt zum 'develop'-Branch und holt die neuesten Änderungen."
SR_HELP_STEP_2="2. Erstellt einen neuen Branch im Format 'release/<versions-nummer>' und wechselt zu ihm."
SR_HELP_STEP_3="3. Pusht den neuen Branch zum Remote und stellt die Nachverfolgung ein (-u)."
SR_HELP_EXAMPLE_DESC="# Erstellt einen neuen Release-Branch namens 'v1.2.6'."
SR_ERROR_NO_VERSION="Versionsnummer wurde nicht angegeben."
SR_INFO_USAGE="Benutzung: $0 <versions-nummer> (z.B. v1.2.6)"
SR_INFO_MORE_INFO="Für weitere Informationen, führen Sie aus: $0 --help"
SR_INFO_CREATING_BRANCH=">> Erstelle neuen Release-Branch:"
SR_INFO_READY="-Branch ist bereit für letzte Tests und Vorbereitungen!"

# --- finish-release.sh Skript-Meldungen ---
FR_HELP_TITLE="finish-release.sh - Schließt ein Release ab und veröffentlicht es."
FR_HELP_DESC_LINE_1="Dieses Skript mergt einen getesteten 'release'-Branch in die permanenten Branches 'main' und 'develop', taggt die neue Version und bereinigt den temporären 'release'-Branch."
FR_HELP_DESC_LINE_2="Das Skript führt die folgenden Schritte in der angegebenen Reihenfolge aus:"
FR_HELP_STEP_1="1. Wechselt zu 'main' und mergt den 'release/<version>'-Branch hinein."
FR_HELP_STEP_2="2. Taggt diesen neuen Merge-Commit auf 'main' mit der Versionsnummer."
FR_HELP_STEP_3="3. Wechselt zu 'develop' und mergt ebenfalls den 'release/<version>'-Branch hinein. (Dies stellt sicher, dass kurzfristige Korrekturen aus dem Release auch in 'develop' enthalten sind)."
FR_HELP_STEP_4="4. Pusht die aktualisierten 'main'- und 'develop'-Branches sowie das neue Tag zum Remote (origin)."
FR_HELP_STEP_5="5. Löscht den abgeschlossenen 'release'-Branch lokal und vom Remote. ('develop' und 'main' werden NIEMALS gelöscht)."
FR_HELP_EXAMPLE_DESC="# Schließt das Release 'v1.2.6' ab und veröffentlicht es."
FR_INFO_SWITCHING_TO_MAIN=">> Wechsle zu 'main' und aktualisiere..."
FR_INFO_MERGING_TO_MAIN="-Branch in 'main'..."
FR_INFO_TAGGING=">> Tagge Version als:"
FR_INFO_MERGING_TO_DEV="-Branch in 'develop'..."
FR_INFO_PUSHING_ALL=">> Pushe 'main', 'develop' und Tags zum Remote..."
FR_INFO_DELETING_BRANCH=">> Lösche Release-Branch lokal und vom Remote..."
FR_INFO_SUCCESS_PREFIX=">> Release"
FR_INFO_SUCCESS_SUFFIX="wurde erfolgreich abgeschlossen!"

# --- start-hotfix.sh Skript-Meldungen ---
SH_HELP_TITLE="start-hotfix.sh - Startet einen Notfall-Hotfix-Prozess."
SH_HELP_DESC_LINE_1="Dieses Skript automatisiert die Erstellung eines neuen Branches, um einen dringenden Fehler im Produktionscode (d.h. dem 'main'-Branch) zu beheben."
SH_HELP_DESC_LINE_2="'Hotfix'-Branches werden direkt aus 'main' erstellt, unabhängig von neuen Features im 'develop'-Branch."
SH_HELP_DESC_LINE_3="Das Skript führt die folgenden Schritte aus:"
SH_HELP_STEP_1="1. Wechselt zum 'main'-Branch und holt die neuesten Änderungen."
SH_HELP_STEP_2="2. Erstellt einen neuen Branch im Format 'hotfix/<hotfix-name>' und wechselt zu ihm."
SH_HELP_EXAMPLE_DESC="# Erstellt einen neuen Hotfix-Branch namens 'notfall-login-fix'."
SH_ERROR_NO_NAME="Hotfix-Name wurde nicht angegeben."
SH_INFO_USAGE="Benutzung: $0 <hotfix-name>"
SH_INFO_CREATING_BRANCH=">> Erstelle neuen Hotfix-Branch:"
SH_INFO_READY="ist bereit für die Bearbeitung!"

# --- finish-hotfix.sh Skript-Meldungen ---
FH_HELP_TITLE="finish-hotfix.sh - Schließt einen Notfall-Hotfix-Prozess ab."
FH_HELP_DESC_LINE_1="Dieses Skript mergt einen 'hotfix'-Branch, der eine dringende Korrektur enthält, in die permanenten Branches 'main' und 'develop', weist ein neues Versions-Tag zu und bereinigt den 'hotfix'-Branch."
FH_HELP_STEP_1="1. Wechselt zu 'main' und mergt den 'hotfix/<name>'-Branch hinein."
FH_HELP_STEP_2="2. Taggt diesen Merge auf 'main' mit der <neue-versions-nummer>."
FH_HELP_STEP_3="3. Wechselt zu 'develop' und mergt ebenfalls den 'hotfix/<name>'-Branch hinein. (Dies stellt sicher, dass die Korrektur in die zukünftige Entwicklung einfließt)."
FH_HELP_STEP_4="4. Pusht die aktualisierten 'main'- und 'develop'-Branches sowie das neue Tag zum Remote."
FH_HELP_STEP_5="5. Löscht den abgeschlossenen 'hotfix'-Branch lokal."
FH_HELP_ARGS_TITLE="ERFORDERLICHE ARGUMENTE:"
FH_HELP_ARG_1="<hotfix-name>          : Der Name des mit 'start-hotfix.sh' erstellten Branches."
FH_HELP_ARG_2="<neue-versions-nummer>   : Die neue Versionsnummer, die mit dieser Korrektur veröffentlicht wird (z.B. v1.2.8)."
FH_HELP_EXAMPLE_DESC="# Schließt den 'notfall-login-fix' ab und veröffentlicht ihn als v1.2.8."
FH_ERROR_MISSING_ARGS="Fehlende Argumente."
FH_INFO_USAGE="Benutzung: $0 <hotfix-name> <neue-versions-nummer>"
FH_INFO_SWITCHING_TO_MAIN=">> Wechsle zu 'main'..."
FH_INFO_SWITCHING_TO_DEV=">> Wechsle zu 'develop'..."
FH_INFO_TAGGING=">> Tagge neue Version als:"
FH_INFO_DELETING_BRANCH=">> Lösche Hotfix-Branch lokal..."
FH_INFO_SUCCESS_PREFIX=">> Hotfix"
FH_INFO_SUCCESS_SUFFIX="wurde erfolgreich abgeschlossen!"